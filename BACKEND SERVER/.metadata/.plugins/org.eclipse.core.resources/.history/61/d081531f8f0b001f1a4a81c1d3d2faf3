package assignment.cpg;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
 
public class AgeCounter {
    private static final String CHALLENGE_TOKEN = "2gat36py58";
private static final String API_URL = "https://coderbyte.com/api/challenges/json/age-counting";
 
    public static void main(String[] args) throws IOException {
        String jsonData = getJsonDataFromApi();
        int count = getCountOfAgeGreaterThan50(jsonData);
        String finalOutput = concatenateWithChallengeToken(count);
        System.out.println(finalOutput);
    }
 
    private static String getJsonDataFromApi() throws IOException {
        URL url = new URL(API_URL);
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
 
        BufferedReader in = new BufferedReader(new InputStreamReader(connection.getInputStream()));
        StringBuilder response = new StringBuilder();
        String inputLine;
 
        while ((inputLine = in.readLine())!= null) {
            response.append(inputLine);
        }
        in.close();
 
        return response.toString();
    }
 
    private static int getCountOfAgeGreaterThan50(String jsonData) {
        String data = jsonData.substring(jsonData.indexOf("data") + 6, jsonData.lastIndexOf("}"));
        String[] items = data.split(", ");
        int count = 0;
 
        Pattern pattern = Pattern.compile("age-(\\d+)");
        for (String item : items) {
            Matcher matcher = pattern.matcher(item);
            if (matcher.find()) {
int age = Integer.parseInt(matcher.group(1));
                if (age >= 50) {
                    count++;
                }
            }
        }
 
        return count;
    }
 
    private static String concatenateWithChallengeToken(int count) {
        String finalOutput = count + CHALLENGE_TOKEN;
        StringBuilder result = new StringBuilder();
 
        for (int i = 0; i < finalOutput.length(); i++) {
            result.append(finalOutput.charAt(i));
            if ((i + 1) % 4 == 0 && i!= finalOutput.length() - 1) {
                result.append("_");
            }
        }
 
        return result.toString();
    }
}
